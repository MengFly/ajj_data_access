<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.akxy.mapper.PosResultMapper">
	<resultMap id="BaseResultMap"
		type="com.akxy.entity.PosResult">
		<id column="collect_time" jdbcType="TIMESTAMP"
			property="collectTime" />
		<result column="x" jdbcType="FLOAT" property="x" />
		<result column="y" jdbcType="FLOAT" property="y" />
		<result column="z" jdbcType="FLOAT" property="z" />
		<result column="energy" jdbcType="FLOAT" property="energy" />
		<result column="area_id" jdbcType="DECIMAL" property="areaId" />
		<result column="source" jdbcType="VARCHAR" property="source" />
		<result column="memo" jdbcType="VARCHAR" property="memo" />
		<result column="CHCOUNT" jdbcType="DECIMAL" property="chcount" />
		<result column="SAMPLENGTH" jdbcType="DECIMAL"
			property="samplength" />
		<result column="SAMPFREQ" jdbcType="DECIMAL"
			property="sampfreq" />
		<result column="SENSORDIR" jdbcType="VARCHAR"
			property="sensordir" />
		<result column="INSTALLWAY" jdbcType="VARCHAR"
			property="installway" />
		<result column="SENSITIVITY" jdbcType="DECIMAL"
			property="sensitivity" />
		<result column="SENSORTYPE" jdbcType="VARCHAR"
			property="sensortype" />
		<result column="POSDESC" jdbcType="VARCHAR" property="posdesc" />
		<result column="MAXSWING" jdbcType="DECIMAL"
			property="maxswing" />
		<result column="AVGSWING" jdbcType="DECIMAL"
			property="avgswing" />
		<result column="BASICFREQ" jdbcType="DECIMAL"
			property="basicfreq" />
		<result column="TRIGCH" jdbcType="VARCHAR" property="trigch" />
		<result column="EXCSTATUS" jdbcType="VARCHAR"
			property="excstatus" />
	</resultMap>
	<sql id="Base_Column_List">
		COLLECT_TIME, X, Y, Z, ENERGY, AREA_ID, SOURCE, MEMO, CHCOUNT, SAMPLENGTH,
		SAMPFREQ,
		SENSORDIR, INSTALLWAY, SENSITIVITY, SENSORTYPE, POSDESC, MAXSWING, AVGSWING,
		BASICFREQ,
		TRIGCH, EXCSTATUS
	</sql>

	<!-- 将组装好的数据写入到POSRESULT表中 -->
	<insert id="writeToPost"
		parameterType="com.akxy.entity.PosResult">
		insert into POSRESULT (collect_time, x, y, z, energy, area_id, source, memo)
		values
		(#{collectTime,jdbcType=TIMESTAMP},#{x,jdbcType=FLOAT},#{y,jdbcType=FLOAT},
		#{z,jdbcType=FLOAT},#{energy,jdbcType=FLOAT},#{areaId,jdbcType=DECIMAL},
		#{source,jdbcType=VARCHAR},#{memo,jdbcType=VARCHAR})
	</insert>

	<!-- 依据时间判断POSRESULT表中是否含有该数据 -->
	<select id="judgeContain" resultType="java.lang.Integer">
		select count(*) from POSRESULT where
		collect_time=#{collectionTime,jdbcType=TIMESTAMP}
	</select>

	<!-- 依据时间判断POSRESULT表中是否含有该数据 -->
	<delete id="deletePOSData">
		delete from POSRESULT where
		collect_time=#{collectionTime,jdbcType=TIMESTAMP}
	</delete>

	<!-- 批量更新POSRESULT -->
	<update id="updateGroupData" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index"
			open="begin" close=";end;" separator=";">
			update POSRESULT p
			set
			p.x=#{item.x,jdbcType=FLOAT},
			p.y=#{item.y,jdbcType=FLOAT},
			p.z=#{item.z,jdbcType=FLOAT},
			p.energy=#{item.energy,jdbcType=FLOAT},
			p.area_id=#{item.areaId,jdbcType=DECIMAL},
			p.source=#{item.source,jdbcType=VARCHAR},
			p.memo=#{item.memo,jdbcType=VARCHAR}
			where p.collect_time=#{item.collectTime,jdbcType=TIMESTAMP}
		</foreach>
	</update>

	<!-- 批量插入POSRESULT -->
	<insert id="insertGroupData" parameterType="java.util.List">
		INSERT INTO POSRESULT (COLLECT_TIME, X, Y,
		Z, ENERGY, AREA_ID, SOURCE,
		MEMO, CHCOUNT, SAMPLENGTH,
		SAMPFREQ, SENSORDIR, INSTALLWAY,
		SENSITIVITY, SENSORTYPE, POSDESC,
		MAXSWING, AVGSWING, BASICFREQ,
		TRIGCH, EXCSTATUS)
		<foreach collection="list" item="item" index="index"
			separator="UNION">
			SELECT
			#{item.collectTime,jdbcType=TIMESTAMP},
			#{item.x,jdbcType=FLOAT},
			#{item.y,jdbcType=FLOAT},
			#{item.z,jdbcType=FLOAT},
			#{item.energy,jdbcType=FLOAT},
			#{item.areaId,jdbcType=DECIMAL},
			#{item.source,jdbcType=VARCHAR},
			#{item.memo,jdbcType=VARCHAR},
			#{item.chcount,jdbcType=DECIMAL},
			#{item.samplength,jdbcType=DECIMAL},
			#{item.sampfreq,jdbcType=DECIMAL},
			#{item.sensordir,jdbcType=VARCHAR},
			#{item.installway,jdbcType=VARCHAR},
			#{item.sensitivity,jdbcType=DECIMAL},
			#{item.sensortype,jdbcType=VARCHAR},
			#{item.posdesc,jdbcType=VARCHAR},
			#{item.maxswing,jdbcType=DECIMAL},
			#{item.avgswing,jdbcType=DECIMAL},
			#{item.basicfreq,jdbcType=DECIMAL},
			#{item.trigch,jdbcType=VARCHAR},
			#{item.excstatus,jdbcType=VARCHAR}
			FROM
			dual
		</foreach>
	</insert>

	<!-- 遍历POSRESULT表 -->
	<select id="getAllPos" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM POSRESULT
	</select>

	<!-- 最新数据上传时间 -->
	<select id="greatestNewTime" resultType="java.util.Date">
		SELECT COLLECT_TIME FROM
		POSRESULT WHERE ROWNUM=1 ORDER BY COLLECT_TIME DESC
	</select>

	<!-- 更新POSResult -->
	<select id="updatePos">
		UPDATE posresult SET
		x=#{x,jdbcType=FLOAT},
		y=#{y,jdbcType=FLOAT},
		z=#{z,jdbcType=FLOAT},
		energy=#{energy,jdbcType=FLOAT},
		area_id=#{areaId,jdbcType=DECIMAL},
		source=#{source,jdbcType=VARCHAR},
		memo=#{memo,jdbcType=VARCHAR}
		where collect_time=#{collectTime,jdbcType=TIMESTAMP}
	</select>

	<select id="findNewDate" resultType="java.util.Date">
		SELECT COLLECT_TIME FROM (SELECT COLLECT_TIME FROM posresult ORDER BY COLLECT_TIME DESC) WHERE ROWNUM = 1
	</select>

</mapper>